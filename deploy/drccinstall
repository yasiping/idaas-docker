#!/bin/bash
set -e
############################osminstall#####################################
funversion () {
        echo -e "\e[1;31m The drccinstal version: $ver  \e[0m"
}

funpre () {
	echo "**********************************************************"
	echo -e "\e[1;31m The DRCC installation is starting, please wait a few minutes... \e[0m"
	echo "**********************************************************"
}

funfilelist () {
tar_package=$(ls /backup/drcc-docker* 2> /dev/null | wc -l)

if [ "$tar_package" != "1" ] ;then  #如果存在文件
   echo -e "\e[1;31m The count of  DRCC tar package in the folder of '/backup/' is not equal to one\e[0m"
   exit 1
fi

#lic=$(ls /backup/*.lic 2> /dev/null | wc -l)
#if [ "$lic" != "1" ] ;then  #如果存在文件
#   echo -e "\e[1;31m Do not have license file in the folder of '/backup/' \e[0m"
#   exit 1
#fi

sudo find /backup/ -type f -iname 'drcc-docker*' |xargs ls -lt |awk {'print $9'}  | grep -v '.md5' > /tmp/drccfilelist
sourcepack=$(head -1 /tmp/drccfilelist)
ver=echo $sourcepack | sed 's/.*solo-\(.*\)\.tar.*/\1/g'
funversion
}

fundeplic () {

for lic in `cat /tmp/drccfilelistlic`
do
        if [[ `cat /tmp/drccfilelistlic |wc -l` -eq '0' ]];
        then
                echo "There is no license file (.lic) in /backupdrcc folder."
        elif [[ `cat $lic |grep -i 'DRCC' |wc -l` -eq '1' ]];
        then
                licname=$lic
		break
        fi
done

if [ -n "$licname" ]; then
sudo cp "$licname" /onekeeper/drcc-docker/drcc_env/etc/license/onekeeper.lic >/dev/null 2>&1
fi
}

setenv () {
    env_file="/onekeeper/drcc-docker/.env_file"

    if [ ! -f $env_file ]; then
        touch $env_file
        writeenv
        tofile
    fi

    source "$env_file"

    for env in SSO_BASE_URL SSO_APP_ID SSO_APP_SECRET CMDB_BASE_URL DRCC_MAIN_URL DRCC_PERMISSION_VERSION
    do
        if   [ !  "$env"   ]; then
            echo -e "\e[1;31m $env not found, add $env in /onekeeper/drcc-docker/.env_file\e[0m"
            exit 1
        fi
    done
}

writeenv() {
    echo "**********************************************************"
	echo "Enter the required environmental information according to the prompt information"
	echo "**********************************************************"
    echo "Idaas server address，e.g.: https://192.168.23.255:18020"
    read SSO_BASE_URL
    echo "**********************************************************"
    echo "The APP_ID of DRCC in Idaas server, e.g. mc207101"
    read SSO_APP_ID
    echo "**********************************************************"
    echo "The APP_ID of DRCC in Idaas server, e.g. 41pSXEnRE7qNgoQD"
    read SSO_APP_SECRET
    echo "**********************************************************"
    echo "The CMDB server address, e.g. http://192.168.23.255:18060"
    read CMDB_BASE_URL
    echo "**********************************************************"
    echo "The DRCC server address, e.g. http://192.168.23.255:8066/main"
    read DRCC_MAIN_URL
    echo "**********************************************************"
    echo "The DRCC version, e.g. 1.0.0"
    read PERMISSION_VERSION
    echo "**********************************************************"
    echo "The Notice Center address, e.g. http://192.168.23.255:18060/main"
    read NOTICE_URL
    echo "**********************************************************"
    echo "The APP_ID of Notice Center in Idaas server, e.g. mc350982"
    read NOTICE_APP_ID
    read -p "Are you sure the message you had entered (Y/N):" warn
    if [ "$warn" = N ]; then
        writeenv
    fi
}

tofile() {
    cat>$env_file<<EOF
SSO_BASE_URL=$SSO_BASE_URL
SSO_APP_ID=$SSO_APP_ID
SSO_APP_SECRET=$SSO_APP_SECRET
CMDB_BASE_URL=$CMDB_BASE_URL
DRCC_MAIN_URL=$DRCC_MAIN_URL
PERMISSION_VERSION=$PERMISSION_VERSION
NOTICE_URL=$NOTICE_URL
NOTICE_APP_ID=$NOTICE_APP_ID
EOF
}

funinstall () {
if [[  -n "$sourcepack" ]]; then
sudo tar -xzvf $sourcepack -C /onekeeper/
sudo chmod +r /onekeeper/drcc-docker/images/okp-drcc.tar
sudo docker load < /onekeeper/drcc-docker/images/okp-drcc.tar
cd /onekeeper/drcc-docker
#fundeplic
setenv
sudo /usr/local/bin/docker-compose up -d
#sudo systemctl enable osm
#sudo systemctl start osm
fi
}


funrename () {

if [ -d "/backup/upgradebak/drcc" ];then
echo ''
else
sudo mkdir -p /backup/upgradebak/drcc
fi
if [ -d "/onekeeper/drcc-docker" ];then
DT=$(date +%H%M)
cd
sudo mv /onekeeper/drcc-docker /backup/upgradebak/drcc/drcc-docker.$DT >/dev/null 2>&1
funinstall
else
funinstall
fi
}

funpost () {

IDNEW=`sudo docker ps -a |grep "drcc-web" | awk '{print $1}'`
ver=`sudo docker ps -a |grep "drcc-web" | awk '{print $2}' |awk -F: '{print $2}'`
ip=`ip addr |grep inet|grep -v 127.0.0.1|grep -v inet6 | awk '{print $2}' |awk -F"/" '{print $1}'|head -n 1`
if [ -d "/onekeeper/drcc-docker" ];then
if [ ! -n "$IDNEW" ]; then
        funpost
else
	echo ""
	echo "**********************************************************"
	echo -e "\e[1;31m The drcc $ver has been installed successfully. You can access DRCC Web Console with the following information: \e[0m"
	echo -e "\e[1;34m URL: http://$ip:8066 \e[0m"
	echo "**********************************************************"

fi
else
        echo ""
        echo "**********************************************************"
        echo -e "\e[1;31m The DRCC installation failed. Please check logs for details. \e[0m"
        echo ""
        echo "**********************************************************"
fi
rm -rf /tmp/drccfilelist*  >/dev/null 2>&1
}

main() {

#funversion

ID=`sudo docker ps -a |grep "drcc-web" | awk '{print $1}'`
if [ ! -n "$ID" ]; then
	funpre
        funfilelist
        funrename
	funpost
else
        echo -e "\e[1;31m The DRCC has been aleady installed. You should uninstall the previous version first. Or upgrade it to new version with command drccupgrade.\e[0m"
fi
}
main